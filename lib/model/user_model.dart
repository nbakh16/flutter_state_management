import 'package:flutter/cupertino.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

class User {
  final String name;
  final String email;

  const User({
    required this.name,
    required this.email,
  });

  ///generated by "Dart Data Class" plugin
  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      (other is User &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          email == other.email);

  @override
  int get hashCode => name.hashCode ^ email.hashCode;

  @override
  String toString() {
    return 'User{ name: $name, email: $email,}';
  }

  User copyWith({
    String? name,
    String? email,
  }) {
    return User(
      name: name ?? this.name,
      email: email ?? this.email,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'name': name,
      'email': email,
    };
  }

  factory User.fromMap(Map<String, dynamic> map) {
    return User(
      name: map['name'] as String,
      email: map['email'] as String,
    );
  }

  factory User.fromJson(Map<String, dynamic> json) {
    return User(
      name: json['name'] as String, // Access name from JSON
      email: json['email'] as String, // Access email from JSON
    );
  }

  Map<String, dynamic> toJson() => {
        "name": name,
        "email": email,
      };
}

//notifier
class UserNotifier extends StateNotifier<User> {
  // UserNotifier() : super(const User(name: '', age: 0));
  UserNotifier() : super(const User(name: '', email: '')) {
    updateName('Initial Value'); //setting value on constructor
  }

  void updateName(String value) => state = state.copyWith(name: value);
}

//changeNotifier
class UserNotifierChange extends ChangeNotifier {
  User user = const User(name: '', email: '');

  void updateName(String value) {
    user = user.copyWith(name: value);
    notifyListeners();
  }
}
